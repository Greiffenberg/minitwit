# This file is deployed by Travis to the server and used by Travis as the final step in "deploy" phase

version: '3.5'
networks:
  main:
    name: itu-minitwit-network
  elk:

volumes:
  esdata:

services:
  backend:
    image: onedevopsitu/backend
    container_name: backend
    restart: always
    network_mode: host
    ports:
      - '3005:3005'
    volumes:
      - /var/log:/logs 

  frontend:
    image: onedevopsitu/frontend
    container_name: frontend
    restart: always
    networks:
      - main
    ports:
      - '3001:3001'

  prometheus:
    image: onedevopsitu/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    networks:
      - main

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    networks:
      - main
    ports:
      - 9100:9100
    restart: always

  mongodb-exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongodb-exporter
    restart: always
    network_mode: host
    ports:
      - '9216:9216'


  grafana:
    image: onedevopsitu/grafana
    container_name: grafana
    restart: always
    ports:
      - "9111:3000"  
    networks:
      - main
    environment:
     - GF_SECURITY_ADMIN_USER=Helge&friends
     - GF_SECURITY_ADMIN_PASSWORD=uiUIui

  elasticsearch:
    image: onedevopsitu/elasticsearch
    container_name: elasticsearch
    volumes:
      - type: bind
        source: ./mon-log/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    image: onedevopsitu/logstash
    container_name: logstash
    volumes:
      - type: bind
        source: ./mon-log/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./mon-log/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: /var/log
        target: /var/log
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: onedevopsitu/kibana
    container_name: kibana
    volumes:
      - type: bind
        source: ./mon-log/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
      - logstash