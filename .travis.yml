os: linux
dist: bionic

language: node_js

services:
  - docker  # required, but travis uses older version of docker :(

install:
  - docker --version  # document the version travis is using

stages:
  - docker_build
  - test
  - deploy

jobs:
  include:
    - stage: docker_build
      name: "build and push docker"
      script:
        - echo "LOGIN"
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        - echo "BUILD"
        - docker build -t $DOCKER_USERNAME/frontend:latest . -f frontend/Dockerfile.prod
        - docker build -t $DOCKER_USERNAME/backend:latest . -f backend/Dockerfile.be
        - docker build -t $DOCKER_USERNAME/db:latest . -f backend/Dockerfile.db
        - docker build -t $DOCKER_USERNAME/prometheus:latest . -f monitoring/prometheus/Dockerfile
        - docker build -t $DOCKER_USERNAME/grafana:latest . -f monitoring/grafana/Dockerfile
        - echo "PUSH"
        - docker push $DOCKER_USERNAME/frontend:latest
        - docker push $DOCKER_USERNAME/backend:latest
        - docker push $DOCKER_USERNAME/db:latest
        - docker push $DOCKER_USERNAME/prometheus:latest
        - docker push $DOCKER_USERNAME/grafana:latest

    - stage: test
      name: "run tests"
      install: skip
      script:
        - docker build -t $DOCKER_USERNAME/test -f tests/Dockerfile.test .
        - yes | docker-compose up -d
        - docker run -it --rm --network=itu-minitwit-network $DOCKER_USERNAME/test

    - stage: deploy
      name: "deploy new version"
      install: skip
      # -o flag to get around "add ip to known hosts prompt"
      script: |
        scp /remote_files/docker-compose.yml ${MT_USER}@${MT_SERVER}:~/test.yml \
        ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
        "source /root/.bashrc && \
        docker-compose pull && \
        docker-compose up -d && \
        ls"
